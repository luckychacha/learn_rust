// 智能指针的概念
// 指针：一个变量在内存中包含的是一个地址【指向其他数据】
// rust 中最常见的指针是引用
// - 使用 【&】
// - 借用它指向的值
// - 没有其余开销
// 智能指针是这样一些数据结构：
// - 行为和指针相似
// - 额外的元数据和额外的功能
// - 引用计数【reference counting】智能指针类型
// 引用和智能指针的其他不同
// - 引用：只是借用数据
// - 智能指针：很多时候后拥有它所指向的数据
// 智能指针的例子：
// - String、Vec<T>
// 都有用一片内存区域，且允许用户对其操作
// 还拥有元数据【例如容量等】
// 提供额外的功能或保障【String保障其数据是合法的 UTF-8 编码】
// 智能指针的实现
//  智能指针通常使用 struct 实现，并且实现了：
//  - Deref 和 Drop 这两个 trait
//  - Deref trait：允许智能指针 struct 的实例像引用一样使用
//  - Drop trait：允许你自定义当智能指针实例走出作用域时的代码。